/**
 * Create Platform Escrow Wallet
 * 
 * This script generates a new Solana wallet to be used as the platform escrow wallet
 * for funding franchise wallets when funding is complete.
 * 
 * Usage:
 *   node scripts/createPlatformWallet.js
 * 
 * The wallet credentials will be saved to platform-wallet.json
 * KEEP THIS FILE SECURE AND NEVER COMMIT IT TO GIT!
 */

const { Keypair } = require('@solana/web3.js');
const fs = require('fs');
const path = require('path');

console.log('🔐 Creating Platform Escrow Wallet...\n');

// Generate a new keypair
const keypair = Keypair.generate();

// Get public key
const publicKey = keypair.publicKey.toBase58();

// Get secret key as array
const secretKeyArray = Array.from(keypair.secretKey);

// Get secret key as JSON string for .env
const secretKeyJSON = JSON.stringify(secretKeyArray);

// Wallet info
const walletInfo = {
  publicKey: publicKey,
  secretKey: secretKeyArray,
  secretKeyJSON: secretKeyJSON,
  network: process.env.NEXT_PUBLIC_SOLANA_NETWORK || 'devnet',
  createdAt: new Date().toISOString(),
  purpose: 'Platform Escrow Wallet - Used for funding franchise wallets',
  warning: 'KEEP THIS FILE SECURE! Never commit to git or share publicly.'
};

// Save to file
const outputPath = path.join(__dirname, '..', 'platform-wallet.json');
fs.writeFileSync(outputPath, JSON.stringify(walletInfo, null, 2));

console.log('✅ Platform Wallet Created Successfully!\n');
console.log('📋 Wallet Details:');
console.log('━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━');
console.log(`Public Key:  ${publicKey}`);
console.log(`Network:     ${walletInfo.network}`);
console.log('━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n');

console.log('📝 Add these to your .env.local file:');
console.log('━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━');
console.log(`PLATFORM_WALLET_PUBLIC_KEY=${publicKey}`);
console.log(`PLATFORM_WALLET_SECRET_KEY='${secretKeyJSON}'`);
console.log('━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n');

console.log('💾 Wallet saved to: platform-wallet.json');
console.log('⚠️  IMPORTANT: Keep this file secure and never commit it to git!\n');

// Create .env.local example if it doesn't exist
const envExamplePath = path.join(__dirname, '..', '.env.local.example');
if (!fs.existsSync(envExamplePath)) {
  const envExample = `# Platform Escrow Wallet (Generated by scripts/createPlatformWallet.js)
PLATFORM_WALLET_PUBLIC_KEY=${publicKey}
PLATFORM_WALLET_SECRET_KEY='${secretKeyJSON}'

# Solana Network
NEXT_PUBLIC_SOLANA_NETWORK=devnet

# Convex URLs
NEXT_PUBLIC_CONVEX_URL=your_convex_production_url
NEXT_PUBLIC_CONVEX_DEV_URL=your_convex_dev_url

# Helius API Keys
NEXT_PUBLIC_HELIUS_API_KEY_MAINNET=your_helius_mainnet_key
NEXT_PUBLIC_HELIUS_API_KEY_DEVNET=your_helius_devnet_key
`;
  fs.writeFileSync(envExamplePath, envExample);
  console.log('📄 Created .env.local.example file\n');
}

console.log('🚀 Next Steps:');
console.log('━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━');
console.log('1. Copy the environment variables above to your .env.local file');
console.log('2. Fund this wallet with SOL:');
console.log(`   - Devnet: Use Solana faucet (airdrop free SOL)`);
console.log(`   - Mainnet: Transfer real SOL to this address`);
console.log('3. View wallet on Solana Explorer:');
const network = walletInfo.network === 'mainnet-beta' ? '' : '?cluster=devnet';
console.log(`   https://explorer.solana.com/address/${publicKey}${network}`);
console.log('4. Restart your dev server to load the new environment variables');
console.log('━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n');

console.log('💰 To fund this wallet on devnet:');
console.log('━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━');
console.log(`   node scripts/fundTestWallets.js ${publicKey}`);
console.log('   OR');
console.log(`   solana airdrop 10 ${publicKey} --url devnet`);
console.log('━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n');

console.log('✅ Done!\n');

